name: Bingo Game CI/CD
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'
  APP_NAME: bingo-game

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Syntax check server.js
        run: node -c server.js
        
      - name: Run tests
        run: npm test
        continue-on-error: true
        
      - name: Verify public folder
        run: |
          echo "Checking public folder..."
          if [ -d public ]; then
            echo "‚úÖ Public folder exists"
            ls -la public/
          else
            echo "‚ùå Public folder missing"
            exit 1
          fi
          
      - name: Build application
        run: |
          mkdir -p dist
          cp server.js dist/
          cp package.json dist/
          cp package-lock.json dist/
          cp -r public dist/
          echo "Built on $(date)" > dist/build-info.txt
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bingo-game-build
          path: dist/
          retention-days: 30

  security-check:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --audit-level high || echo "Security issues found ‚Äì review needed"

  deployment-check:
    name: Deployment Readiness
    runs-on: ubuntu-latest
    needs: [build-and-test, security-check]
    if: always()
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: bingo-game-build
          path: build-output/
          
      - name: Check deployment readiness
        run: |
          echo "=== Bingo Game Deployment Check ==="
          if [ -d build-output ]; then
            ls -la build-output/
            echo "üéâ Your Bingo Game is ready for deployment!"
          else
            echo "‚ö†Ô∏è Build artifacts not available"
          fi